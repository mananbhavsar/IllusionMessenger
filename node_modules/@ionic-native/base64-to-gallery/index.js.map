{"version":3,"sources":["../../../src/@ionic-native/plugins/base64-to-gallery/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;GAkBG;AASH;IAAqC,mCAAiB;IAAtD;;IAsBA,CAAC;IApBC;;;;;OAKG;IAKH,yCAAe,GAAf,UAAgB,IAAY,EAAE,OAAqD;QACjF,MAAM,CAAC;IACT,CAAC;IAEI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IATA;QAJC,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;0DAGD;IAdU,eAAe;QAR3B,MAAM,CAAC;YACN,UAAU,EAAE,iBAAiB;YAC7B,MAAM,EAAE,2BAA2B;YACnC,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,oDAAoD;YAC1D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;SACjD,CAAC;OAEW,eAAe,CAsB3B;IAAD,sBAAC;CAtBD,AAsBC,CAtBoC,iBAAiB,GAsBrD;SAtBY,eAAe","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Base64 To Gallery\n * @description This plugin allows you to save base64 data as a png image into the device\n * @usage\n * ```typescript\n * import { Base64ToGallery } from '@ionic-native/base64-to-gallery';\n *\n * constructor(private base64ToGallery: Base64ToGallery) { }\n *\n *\n * ...\n *\n *\n * this.base64ToGallery.base64ToGallery(base64Data, { prefix: '_img' }).then(\n *   res => console.log('Saved image to gallery ', res),\n *   err => console.log('Error saving image to gallery ', err)\n * );\n * ```\n */\n@Plugin({\n  pluginName: 'Base64ToGallery',\n  plugin: 'cordova-base64-to-gallery',\n  pluginRef: 'cordova',\n  repo: 'https://github.com/Nexxa/cordova-base64-to-gallery',\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\n})\n\nexport class Base64ToGallery extends IonicNativePlugin {\n\n  /**\n   * Converts a base64 string to an image file in the device gallery\n   * @param {string} data The actual base64 string that you want to save\n   * @param {any} [options] An object with properties: prefix: string, mediaScanner: boolean. Prefix will be prepended to the filename. If true, mediaScanner runs Media Scanner on Android and saves to Camera Roll on iOS; if false, saves to Library folder on iOS.\n   * @returns {Promise<any>} returns a promise that resolves when the image is saved.\n   */\n  @Cordova({\n    successIndex: 2,\n    errorIndex: 3\n  })\n  base64ToGallery(data: string, options?: { prefix?: string; mediaScanner?: boolean }): Promise<any> {\n    return;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}