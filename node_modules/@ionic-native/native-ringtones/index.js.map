{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/native-ringtones/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;IAiCN,mCAAiB;;;;IAEpD;;;OAGG;;;;;IAEH,qCAAW;;;;kBAAmB,MAAM,CAAC,EAAE;IAEvC;;;;OAIG;;;;;;IAEH,sCAAY;;;;;cAAC,WAAmB,IAAkB,MAAM,CAAC,EAAE;IAE3D;;;;OAIG;;;;;;IAEH,sCAAY;;;;;cAAC,WAAmB,IAAkB,MAAM,CAAC,EAAE;;gBAxB5D,UAAU;;;QAOR,OAAO,EAAE;;;;sDAC6B;;QAOtC,OAAO,EAAE;;;;uDACiD;;QAO1D,OAAO,EAAE;;;;uDACiD;;;;;;;;;;;;;;;;;;;;;;;;IAvBhD,eAAe;QAR3B,MAAM,CAAC;YACN,UAAU,EAAE,kBAAkB;YAC9B,MAAM,EAAE,iCAAiC;YACzC,SAAS,EAAE,iCAAiC;YAC5C,IAAI,EAAE,gEAAgE;YACtE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,eAAe,EAwB3B;0BA1DD;EAkCqC,iBAAiB;SAAzC,eAAe","sourcesContent":["import { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @beta\n * @name Native Ringtones\n * @description\n * The plugin helps get the native ringtones list on Android or IOS devices.\n * And you can also use this plugin to play or stop the native ringtones and custom ringtones(added in the www folder).\n *\n * @usage\n * ```\n * import { NativeRingtones } from '@ionic-native/native-ringtones';\n *\n *\n * constructor(private ringtones: NativeRingtones) { }\n *\n * ...\n * this.ringtones.getRingtone().then((ringtones) => { console.log(ringtones); });\n *\n * this.ringtones.playRingtone('assets/ringtones/sound_1.caf');\n *\n * this.ringtones.stopRingtone('assets/ringtones/sound_1.caf');\n *\n * ```\n */\n@Plugin({\n  pluginName: 'native-ringtones',\n  plugin: 'cordova-plugin-native-ringtones',\n  pluginRef: 'cordova.plugins.NativeRingtones',\n  repo: 'https://github.com/TongZhangzt/cordova-plugin-native-ringtones',\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class NativeRingtones extends IonicNativePlugin {\n\n  /**\n   * Get the ringtone list of the device\n   * @return {Promise<any>} Returns a promise that resolves when ringtones found successfully\n   */\n  @Cordova()\n  getRingtone(): Promise<any> { return; }\n\n  /**\n   * This function starts playing the ringtone\n   * @param {string} ringtoneUri The path to the ringtone file\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  playRingtone(ringtoneUri: string): Promise<any> { return; }\n\n  /**\n   * This function stops playing the ringtone\n   * @param {string} ringtoneUri The path to the ringtone file\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova()\n  stopRingtone(ringtoneUri: string): Promise<any> { return; }\n}\n"]}