{"version":3,"sources":["../../../src/@ionic-native/plugins/shake/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AAC7C;;;;;;;;;;;;;;;;;GAiBG;AASH,IAAa,KAAK;IAAS,yBAAiB;IAA5C;;IAoBA,CAAC;IAnBC;;;;OAIG;IAOH,0BAAU,GAAV,UAAW,WAAoB,IAAqB,MAAM,CAAC,CAAC,CAAC;IAQ/D,YAAC;AAAD,CApBA,AAoBC,CApB0B,iBAAiB,GAoB3C;AANM,gBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,oBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAPA;IANC,OAAO,CAAC;QACP,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,WAAW;QAC1B,YAAY,EAAE,CAAC;QACf,UAAU,EAAE,CAAC;KACd,CAAC;;;oCACgC,UAAU;uCAAiB;AAZlD,KAAK;IARjB,MAAM,CAAC;QACN,UAAU,EAAE,OAAO;QACnB,MAAM,EAAE,sBAAsB;QAC9B,SAAS,EAAE,OAAO;QAClB,IAAI,EAAE,qDAAqD;QAC3D,SAAS,EAAE,CAAC,KAAK,CAAC;KACnB,CAAC;GAEW,KAAK,CAoBjB;SApBY,KAAK","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n/**\r\n * @name Shake\r\n * @description Handles shake gesture\r\n * @usage\r\n * ```typescript\r\n * import { Shake } from '@ionic-native/shake';\r\n *\r\n * constructor(private shake: Shake) { }\r\n *\r\n * ...\r\n *\r\n * const watch = this.shake.startWatch(60).subscribe(() => {\r\n *   // do something\r\n *   });\r\n *\r\n * watch.unsubscribe();\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'Shake',\r\n  plugin: 'cordova-plugin-shake',\r\n  pluginRef: 'shake',\r\n  repo: 'https://github.com/leecrossley/cordova-plugin-shake',\r\n  platforms: ['iOS']\r\n})\r\n\r\nexport class Shake extends IonicNativePlugin {\r\n  /**\r\n   * Watch for shake gesture\r\n   * @param sensitivity {number} Optional sensitivity parameter. Defaults to 40\r\n   * @returns {Observable<any>}\r\n   */\r\n  @Cordova({\r\n    observable: true,\r\n    clearFunction: 'stopWatch',\r\n    successIndex: 0,\r\n    errorIndex: 2\r\n  })\r\n  startWatch(sensitivity?: number): Observable<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}