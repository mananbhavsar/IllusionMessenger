{"version":3,"sources":["../../../src/@ionic-native/plugins/vibration/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAGxE;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AASH;IAA+B,6BAAiB;IAAhD;;IAiBA,CAAC;IAfC;;;OAGG;IAIH,2BAAO,GAAP,UAAQ,IAA4B,IAAI,CAAC;IAEpC,oBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAPA;QAHC,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;SACX,CAAC;;;;4CACuC;IAT9B,SAAS;QARrB,MAAM,CAAC;YACN,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE,0BAA0B;YAClC,SAAS,EAAE,WAAW;YACtB,IAAI,EAAE,oDAAoD;YAC1D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACzC,CAAC;OAEW,SAAS,CAiBrB;IAAD,gBAAC;CAjBD,AAiBC,CAjB8B,iBAAiB,GAiB/C;SAjBY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n\n/**\n * @name Vibration\n * @description Vibrates the device\n * @usage\n * ```typescript\n * import { Vibration } from '@ionic-native/vibration';\n *\n * constructor(private vibration: Vibration) { }\n *\n * ...\n *\n * // Vibrate the device for a second\n * // Duration is ignored on iOS.\n * this.vibration.vibrate(1000);\n *\n * // Vibrate 2 seconds\n * // Pause for 1 second\n * // Vibrate for 2 seconds\n * // Patterns work on Android and Windows only\n * this.vibration.vibrate([2000,1000,2000]);\n *\n * // Stop any current vibrations immediately\n * // Works on Android and Windows only\n * this.vibration.vibrate(0);\n * ```\n */\n@Plugin({\n  pluginName: 'Vibration',\n  plugin: 'cordova-plugin-vibration',\n  pluginRef: 'navigator',\n  repo: 'https://github.com/apache/cordova-plugin-vibration',\n  platforms: ['Android', 'iOS', 'Windows']\n})\n\nexport class Vibration extends IonicNativePlugin {\n\n  /**\n   * Vibrates the device for given amount of time.\n   * @param time {number|Array<number>} Milliseconds to vibrate the device. If passed an array of numbers, it will define a vibration pattern. Pass 0 to stop any vibration immediately.\n   */\n  @Cordova({\n    sync: true\n  })\n  vibrate(time: number | Array<number>) { }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}