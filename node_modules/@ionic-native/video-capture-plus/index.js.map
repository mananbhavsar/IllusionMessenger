{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/video-capture-plus/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2IlC,oCAAiB;;;;IACrD;;;;OAIG;;;;;;IAIH,uCAAY;;;;;cAAC,OAAiC;QAC5C,MAAM,CAAC;KACR;;gBAZF,UAAU;;;QAOR,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;SACzB,CAAC;;;;wDAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAXU,gBAAgB;QAR5B,MAAM,CAAC;YACN,UAAU,EAAE,kBAAkB;YAC9B,MAAM,EAAE,mCAAmC;YAC3C,SAAS,EAAE,iCAAiC;YAC5C,IAAI,EAAE,iEAAiE;YACvE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,gBAAgB,EAY5B;2BAxJD;EA4IsC,iBAAiB;SAA1C,gBAAgB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface MediaFile {\n  /**\n   * The name of the file, without path information.\n   */\n  name: string;\n  /**\n   * The full path of the file, including the name.\n   */\n  fullPath: string;\n  /**\n   * The file's mime type\n   */\n  type: string;\n\n  /**\n   * The date and time when the file was last modified.\n   */\n  lastModifiedDate: Date;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  size: number;\n\n  /**\n   * Retrieves the format information of the media file.\n   * @param {Function} successCallback\n   * @param {Function} [errorCallback]\n   */\n  getFormatData(\n    successCallback: (data: MediaFileData) => any,\n    errorCallback?: (err: any) => any\n  ): any;\n}\n\nexport interface MediaFileData {\n  /**\n   * The actual format of the audio and video content.\n   */\n  codecs: string;\n  /**\n   * The average bitrate of the content. The value is zero for images.\n   */\n  bitrate: number;\n  /**\n   * The height of the image or video in pixels. The value is zero for audio clips.\n   */\n  height: number;\n  /**\n   * The width of the image or video in pixels. The value is zero for audio clips.\n   */\n  width: number;\n  /**\n   * The length of the video or sound clip in seconds. The value is zero for images.\n   */\n  duration: number;\n}\n\nexport interface VideoCapturePlusOptions {\n  /**\n   * The number of videos to record, default 1 (on iOS always 1)\n   */\n  limit?: number;\n\n  /**\n   * Max duration in seconds, default 0, which is 'forever'\n   */\n  duration?: number;\n\n  /**\n   * Set to true to override the default low quality setting\n   */\n  highquality?: boolean;\n\n  /**\n   * Set to true to override the default backfacing camera setting.\n   * You'll want to sniff the useragent/device and pass the best overlay based on that.. assuming iphone here\n   */\n  frontcamera?: boolean;\n\n  /**\n   * put the png overlay in your assets folder\n   */\n  portraitOverlay?: string;\n\n  /**\n   *  not passing an overlay means no image is shown for the landscape orientation\n   */\n  landscapeOverlay?: string;\n\n  /**\n   * iOS only\n   */\n  overlayText?: string;\n}\n\n/**\n * @beta\n * @name Video Capture Plus\n * @description\n * This plugin offers some useful extras on top of the default Media Capture Plugin capabilities:\n * - HD recording.\n * - Starting with the front camera.\n * - A custom overlay (currently iOS only).\n *\n * @usage\n * ```typescript\n * import { VideoCapturePlus, VideoCapturePlusOptions, MediaFile } from '@ionic-native/video-capture-plus';\n *\n *\n * constructor(private videoCapturePlus: VideoCapturePlus) { }\n *\n * ...\n *\n * const options: VideoCapturePlusOptions = {\n *    limit: 1,\n *    highquality: true,\n *    portraitOverlay: 'assets/img/camera/overlay/portrait.png',\n *    landscapeOverlay: 'assets/img/camera/overlay/landscape.png'\n * }\n *\n * this.videoCapturePlus.captureVideo(options).then(mediafile: MediaFile[] => console.log(mediafile), error => console.log('Something went wrong'));\n *\n * ```\n * @interfaces\n * MediaFile\n * MediaFileData\n * VideoCapturePlusOptions\n */\n@Plugin({\n  pluginName: 'VideoCapturePlus',\n  plugin: 'cordova-plugin-video-capture-plus',\n  pluginRef: 'window.plugins.videocaptureplus',\n  repo: 'https://github.com/danielsogl/cordova-plugin-video-capture-plus',\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class VideoCapturePlus extends IonicNativePlugin {\n  /**\n   * Starts recordings\n   * @param [options] {VideoCapturePlusOptions} Configure options\n   * @return {Promise<MediaFile[]>}\n   */\n  @Cordova({\n    callbackOrder: 'reverse'\n  })\n  captureVideo(options?: VideoCapturePlusOptions): Promise<MediaFile[]> {\n    return;\n  }\n}\n"]}